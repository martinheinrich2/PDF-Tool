# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'mainwindow.ui'
##
## Created by: Qt User Interface Compiler version 6.6.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtPdfWidgets import QPdfView
from PySide6.QtWidgets import (QApplication, QMainWindow, QMenu, QMenuBar,
    QSizePolicy, QSplitter, QStatusBar, QToolBar,
    QVBoxLayout, QWidget)
import resources_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(920, 1050)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.actionOpen = QAction(MainWindow)
        self.actionOpen.setObjectName(u"actionOpen")
        icon = QIcon()
        icon.addFile(u":/resources/folder-open-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpen.setIcon(icon)
        self.actionForward = QAction(MainWindow)
        self.actionForward.setObjectName(u"actionForward")
        icon1 = QIcon()
        icon1.addFile(u":/resources/arrow-thick-right-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionForward.setIcon(icon1)
        self.actionForward.setMenuRole(QAction.TextHeuristicRole)
        self.actionBack = QAction(MainWindow)
        self.actionBack.setObjectName(u"actionBack")
        icon2 = QIcon()
        icon2.addFile(u":/resources/arrow-thick-left-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBack.setIcon(icon2)
        self.actionBack.setMenuRole(QAction.TextHeuristicRole)
        self.actionZoomIn = QAction(MainWindow)
        self.actionZoomIn.setObjectName(u"actionZoomIn")
        icon3 = QIcon()
        icon3.addFile(u":/resources/zoom-in-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionZoomIn.setIcon(icon3)
        self.actionZoomIn.setMenuRole(QAction.TextHeuristicRole)
        self.actionZoomOut = QAction(MainWindow)
        self.actionZoomOut.setObjectName(u"actionZoomOut")
        icon4 = QIcon()
        icon4.addFile(u":/resources/zoom-out-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionZoomOut.setIcon(icon4)
        self.actionZoomOut.setMenuRole(QAction.TextHeuristicRole)
        self.actionRotateLeft = QAction(MainWindow)
        self.actionRotateLeft.setObjectName(u"actionRotateLeft")
        icon5 = QIcon()
        icon5.addFile(u":/resources/rotate-left-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRotateLeft.setIcon(icon5)
        self.actionRotateLeft.setMenuRole(QAction.TextHeuristicRole)
        self.actionRotateRight = QAction(MainWindow)
        self.actionRotateRight.setObjectName(u"actionRotateRight")
        icon6 = QIcon()
        icon6.addFile(u":/resources/rotate-right-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRotateRight.setIcon(icon6)
        self.actionRotateRight.setMenuRole(QAction.TextHeuristicRole)
        self.actionInfo_2 = QAction(MainWindow)
        self.actionInfo_2.setObjectName(u"actionInfo_2")
        icon7 = QIcon()
        icon7.addFile(u":/resources/info-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionInfo_2.setIcon(icon7)
        self.actionInfo_2.setMenuRole(QAction.TextHeuristicRole)
        self.actionMergePdf = QAction(MainWindow)
        self.actionMergePdf.setObjectName(u"actionMergePdf")
        icon8 = QIcon()
        icon8.addFile(u":/resources/merge-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionMergePdf.setIcon(icon8)
        self.actionMergePdf.setMenuRole(QAction.TextHeuristicRole)
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        icon9 = QIcon()
        icon9.addFile(u":/resources/extract-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExit.setIcon(icon9)
        self.actionExit.setMenuRole(QAction.TextHeuristicRole)
        self.actionExport = QAction(MainWindow)
        self.actionExport.setObjectName(u"actionExport")
        icon10 = QIcon()
        icon10.addFile(u":/resources/extract-button-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport.setIcon(icon10)
        self.actionExport.setMenuRole(QAction.TextHeuristicRole)
        self.actionSave = QAction(MainWindow)
        self.actionSave.setObjectName(u"actionSave")
        icon11 = QIcon()
        icon11.addFile(u":/resources/document-save-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave.setIcon(icon11)
        self.actionSave.setMenuRole(QAction.TextHeuristicRole)
        self.actionOpen_2 = QAction(MainWindow)
        self.actionOpen_2.setObjectName(u"actionOpen_2")
        self.actionOpen_2.setMenuRole(QAction.NoRole)
        self.actionSave_As = QAction(MainWindow)
        self.actionSave_As.setObjectName(u"actionSave_As")
        self.actionQuit_PDF_Tool = QAction(MainWindow)
        self.actionQuit_PDF_Tool.setObjectName(u"actionQuit_PDF_Tool")
        self.actionQuit_PDF_Tool.setMenuRole(QAction.NoRole)
        self.actionZoom_in = QAction(MainWindow)
        self.actionZoom_in.setObjectName(u"actionZoom_in")
        self.actionZoom_out = QAction(MainWindow)
        self.actionZoom_out.setObjectName(u"actionZoom_out")
        self.actionPrevious_Page = QAction(MainWindow)
        self.actionPrevious_Page.setObjectName(u"actionPrevious_Page")
        self.actionNext_Page = QAction(MainWindow)
        self.actionNext_Page.setObjectName(u"actionNext_Page")
        self.actionRotate_Left = QAction(MainWindow)
        self.actionRotate_Left.setObjectName(u"actionRotate_Left")
        self.actionRotate_Right = QAction(MainWindow)
        self.actionRotate_Right.setObjectName(u"actionRotate_Right")
        self.actionInfo = QAction(MainWindow)
        self.actionInfo.setObjectName(u"actionInfo")
        self.actionMerge_Files = QAction(MainWindow)
        self.actionMerge_Files.setObjectName(u"actionMerge_Files")
        self.actionExtract_Page = QAction(MainWindow)
        self.actionExtract_Page.setObjectName(u"actionExtract_Page")
        self.actionHelp_PDF_Tool = QAction(MainWindow)
        self.actionHelp_PDF_Tool.setObjectName(u"actionHelp_PDF_Tool")
        self.actionactionFitZoom = QAction(MainWindow)
        self.actionactionFitZoom.setObjectName(u"actionactionFitZoom")
        icon12 = QIcon()
        icon12.addFile(u":/resources/gui-zoom-fit-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionactionFitZoom.setIcon(icon12)
        self.actionactionFitZoom.setMenuRole(QAction.TextHeuristicRole)
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionAbout.setMenuRole(QAction.NoRole)
        self.actionDeletePage = QAction(MainWindow)
        self.actionDeletePage.setObjectName(u"actionDeletePage")
        icon13 = QIcon()
        icon13.addFile(u":/resources/pagedelete-svgrepo-com.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDeletePage.setIcon(icon13)
        self.actionDeletePage.setMenuRole(QAction.TextHeuristicRole)
        self.actionDeletePage.setIconVisibleInMenu(True)
        self.actionZoom_to_fit = QAction(MainWindow)
        self.actionZoom_to_fit.setObjectName(u"actionZoom_to_fit")
        self.actionDelete_Page = QAction(MainWindow)
        self.actionDelete_Page.setObjectName(u"actionDelete_Page")
        self.actionSplit_File = QAction(MainWindow)
        self.actionSplit_File.setObjectName(u"actionSplit_File")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout = QVBoxLayout(self.centralwidget)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.widget = QWidget(self.centralwidget)
        self.widget.setObjectName(u"widget")
        self.verticalLayout_2 = QVBoxLayout(self.widget)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.splitter = QSplitter(self.widget)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setOrientation(Qt.Horizontal)
        self.pagesView = QPdfView(self.splitter)
        self.pagesView.setObjectName(u"pagesView")
        sizePolicy = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pagesView.sizePolicy().hasHeightForWidth())
        self.pagesView.setSizePolicy(sizePolicy)
        self.splitter.addWidget(self.pagesView)
        self.pdfView = QPdfView(self.splitter)
        self.pdfView.setObjectName(u"pdfView")
        sizePolicy1 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.pdfView.sizePolicy().hasHeightForWidth())
        self.pdfView.setSizePolicy(sizePolicy1)
        self.splitter.addWidget(self.pdfView)

        self.verticalLayout_2.addWidget(self.splitter)


        self.verticalLayout.addWidget(self.widget)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 920, 24))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName(u"menuTools")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.mainToolBar = QToolBar(MainWindow)
        self.mainToolBar.setObjectName(u"mainToolBar")
        self.mainToolBar.setMovable(False)
        self.mainToolBar.setFloatable(False)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.mainToolBar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionOpen_2)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionQuit_PDF_Tool)
        self.menuView.addAction(self.actionZoom_in)
        self.menuView.addAction(self.actionZoom_out)
        self.menuView.addAction(self.actionZoom_to_fit)
        self.menuView.addAction(self.actionPrevious_Page)
        self.menuView.addAction(self.actionNext_Page)
        self.menuView.addAction(self.actionRotate_Left)
        self.menuView.addAction(self.actionRotate_Right)
        self.menuView.addAction(self.actionInfo)
        self.menuTools.addAction(self.actionMerge_Files)
        self.menuTools.addAction(self.actionDelete_Page)
        self.menuTools.addAction(self.actionExtract_Page)
        self.menuTools.addAction(self.actionSplit_File)
        self.menuHelp.addAction(self.actionAbout)
        self.mainToolBar.addSeparator()
        self.mainToolBar.addAction(self.actionOpen)
        self.mainToolBar.addAction(self.actionBack)
        self.mainToolBar.addAction(self.actionForward)
        self.mainToolBar.addAction(self.actionZoomIn)
        self.mainToolBar.addAction(self.actionZoomOut)
        self.mainToolBar.addAction(self.actionactionFitZoom)
        self.mainToolBar.addAction(self.actionRotateLeft)
        self.mainToolBar.addAction(self.actionRotateRight)
        self.mainToolBar.addAction(self.actionInfo_2)
        self.mainToolBar.addAction(self.actionMergePdf)
        self.mainToolBar.addAction(self.actionExport)
        self.mainToolBar.addAction(self.actionDeletePage)
        self.mainToolBar.addAction(self.actionSave)
        self.mainToolBar.addSeparator()
        self.mainToolBar.addAction(self.actionExit)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"PDF Tool", None))
        self.actionOpen.setText(QCoreApplication.translate("MainWindow", u"actionOpen", None))
#if QT_CONFIG(tooltip)
        self.actionOpen.setToolTip(QCoreApplication.translate("MainWindow", u"Open Document", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOpen.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionForward.setText(QCoreApplication.translate("MainWindow", u"actionForward", None))
#if QT_CONFIG(tooltip)
        self.actionForward.setToolTip(QCoreApplication.translate("MainWindow", u"Next Page", None))
#endif // QT_CONFIG(tooltip)
        self.actionBack.setText(QCoreApplication.translate("MainWindow", u"actionBack", None))
#if QT_CONFIG(tooltip)
        self.actionBack.setToolTip(QCoreApplication.translate("MainWindow", u"Previous Page", None))
#endif // QT_CONFIG(tooltip)
        self.actionZoomIn.setText(QCoreApplication.translate("MainWindow", u"actionZoomIn", None))
#if QT_CONFIG(tooltip)
        self.actionZoomIn.setToolTip(QCoreApplication.translate("MainWindow", u"Zoom in", None))
#endif // QT_CONFIG(tooltip)
        self.actionZoomOut.setText(QCoreApplication.translate("MainWindow", u"actionZoomOut", None))
#if QT_CONFIG(tooltip)
        self.actionZoomOut.setToolTip(QCoreApplication.translate("MainWindow", u"Zoom out", None))
#endif // QT_CONFIG(tooltip)
        self.actionRotateLeft.setText(QCoreApplication.translate("MainWindow", u"actionRotateLeft", None))
#if QT_CONFIG(tooltip)
        self.actionRotateLeft.setToolTip(QCoreApplication.translate("MainWindow", u"Rotate Left", None))
#endif // QT_CONFIG(tooltip)
        self.actionRotateRight.setText(QCoreApplication.translate("MainWindow", u"actionRotateRight", None))
#if QT_CONFIG(tooltip)
        self.actionRotateRight.setToolTip(QCoreApplication.translate("MainWindow", u"Rotate right", None))
#endif // QT_CONFIG(tooltip)
        self.actionInfo_2.setText(QCoreApplication.translate("MainWindow", u"actionInfo", None))
#if QT_CONFIG(tooltip)
        self.actionInfo_2.setToolTip(QCoreApplication.translate("MainWindow", u"Get Info About Document", None))
#endif // QT_CONFIG(tooltip)
        self.actionMergePdf.setText(QCoreApplication.translate("MainWindow", u"actionMergePdf", None))
#if QT_CONFIG(tooltip)
        self.actionMergePdf.setToolTip(QCoreApplication.translate("MainWindow", u"Merge Two PDF Files", None))
#endif // QT_CONFIG(tooltip)
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"actionExit", None))
#if QT_CONFIG(tooltip)
        self.actionExit.setToolTip(QCoreApplication.translate("MainWindow", u"Exit Program", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport.setText(QCoreApplication.translate("MainWindow", u"actionExport", None))
#if QT_CONFIG(tooltip)
        self.actionExport.setToolTip(QCoreApplication.translate("MainWindow", u"Export Page", None))
#endif // QT_CONFIG(tooltip)
        self.actionSave.setText(QCoreApplication.translate("MainWindow", u"actionSave", None))
#if QT_CONFIG(tooltip)
        self.actionSave.setToolTip(QCoreApplication.translate("MainWindow", u"Save PDF As", None))
#endif // QT_CONFIG(tooltip)
        self.actionOpen_2.setText(QCoreApplication.translate("MainWindow", u"Open", None))
#if QT_CONFIG(tooltip)
        self.actionOpen_2.setToolTip(QCoreApplication.translate("MainWindow", u"Open File", None))
#endif // QT_CONFIG(tooltip)
        self.actionSave_As.setText(QCoreApplication.translate("MainWindow", u"Save As ...", None))
        self.actionQuit_PDF_Tool.setText(QCoreApplication.translate("MainWindow", u"Quit", None))
        self.actionZoom_in.setText(QCoreApplication.translate("MainWindow", u"Zoom in", None))
        self.actionZoom_out.setText(QCoreApplication.translate("MainWindow", u"Zoom out", None))
        self.actionPrevious_Page.setText(QCoreApplication.translate("MainWindow", u"Previous Page", None))
        self.actionNext_Page.setText(QCoreApplication.translate("MainWindow", u"Next Page", None))
        self.actionRotate_Left.setText(QCoreApplication.translate("MainWindow", u"Rotate Left", None))
        self.actionRotate_Right.setText(QCoreApplication.translate("MainWindow", u"Rotate Right", None))
        self.actionInfo.setText(QCoreApplication.translate("MainWindow", u"Info", None))
        self.actionMerge_Files.setText(QCoreApplication.translate("MainWindow", u"Append File", None))
        self.actionExtract_Page.setText(QCoreApplication.translate("MainWindow", u"Export Page", None))
        self.actionHelp_PDF_Tool.setText(QCoreApplication.translate("MainWindow", u"Help PDF Tool", None))
        self.actionactionFitZoom.setText(QCoreApplication.translate("MainWindow", u"Fit to Page", None))
#if QT_CONFIG(tooltip)
        self.actionactionFitZoom.setToolTip(QCoreApplication.translate("MainWindow", u"Fit to Page", None))
#endif // QT_CONFIG(tooltip)
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
#if QT_CONFIG(statustip)
        self.actionAbout.setStatusTip(QCoreApplication.translate("MainWindow", u"About the App", None))
#endif // QT_CONFIG(statustip)
        self.actionDeletePage.setText(QCoreApplication.translate("MainWindow", u"Delete Page", None))
#if QT_CONFIG(tooltip)
        self.actionDeletePage.setToolTip(QCoreApplication.translate("MainWindow", u"Delete current page from document.", None))
#endif // QT_CONFIG(tooltip)
        self.actionZoom_to_fit.setText(QCoreApplication.translate("MainWindow", u"Zoom to fit", None))
        self.actionDelete_Page.setText(QCoreApplication.translate("MainWindow", u"Delete Page", None))
        self.actionSplit_File.setText(QCoreApplication.translate("MainWindow", u"Split File", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View", None))
        self.menuTools.setTitle(QCoreApplication.translate("MainWindow", u"Tools", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"About", None))
        self.mainToolBar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
    # retranslateUi

